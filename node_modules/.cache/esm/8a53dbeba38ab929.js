let ROLES,POLICIES,shuffle,Player;_a38‍.x([["default",()=>_a38‍.o]]);_a38‍.w("../utils/constants",[["ROLES",["ROLES"],function(v){ROLES=v}],["POLICIES",["POLICIES"],function(v){POLICIES=v}]]);_a38‍.w("../utils/shuffle",[["default",["shuffle"],function(v){shuffle=v}]]);_a38‍.w("../models/Player",[["default",["Player"],function(v){Player=v}]]);




class Game {
    constructor(){
        this.deck = POLICIES;
        this.discard = [];
        this.players = [];
        this.president = null;
        this.chancellor = null;
        this.draw = [];
    }

    /*
    Takes in a list of userIds
    Shuffles the players around to determine sequence of Presidents
    */
    setPlayers(users) {
        if(users.length < 5 || users.length > 10){
            throw "Invalid number of players!";
        }

        shuffle(users);

        for(let i=0; i < users.length; i ++){
            this.players.push(new Player(users[i], ROLES[users.length.toString()][i]))
        }

        _a38‍.g.console.log(this.players);

    }


    
}

_a38‍.d(Game);